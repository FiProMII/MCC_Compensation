@{ Layout = "_LayoutAdmin";
    ViewData["Title"] = "Employee";
}

<!-- ============================================================== -->
<!-- Container fluid  -->
<!-- ============================================================== -->
<div class="container-fluid">
    <!-- ============================================================== -->
    <!-- Bread crumb and right sidebar toggle -->
    <!-- ============================================================== -->
    <div class="row page-titles">
        <div class="col-md-6 col-8 align-self-center">
            <h3 class="text-themecolor m-b-0 m-t-0">@ViewData["Title"]</h3>
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/Dashboard/Index">Home</a></li>
                <li class="breadcrumb-item active">@ViewData["Title"]</li>
            </ol>
        </div>
        <div class="col-md-6 col-4 align-self-center">
            <button class="btn pull-right hidden-sm-down btn-success" data-toggle="modal" data-target=".bs-modal-lg" onclick="reset()"><i class="mdi mdi-plus-circle"></i> Create</button>
        </div>
    </div>
    <!-- ============================================================== -->
    <!-- End Bread crumb and right sidebar toggle -->
    <!-- ============================================================== -->
    <!-- ============================================================== -->
    <!-- Start Page Content -->
    <!-- ============================================================== -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title">Data Export</h4>
                    <h6 class="card-subtitle">Export data CSV, Excel, PDF</h6>
                    <div class="table-responsive m-t-40">
                        <table id="table_id" class="display nowrap table table-hover table-striped table-bordered" cellspacing="0" width="100%">
                            <thead>
                                <tr>
                                    <th>No.</th>
                                    <th>NIK</th>
                                    <th>Name</th>
                                    <th>Email</th>
                                    <th>Phone</th>
                                    <th>Address</th>
                                    <th>Birth</th>
                                    <th>Join Date</th>
                                    <th>Position</th>
                                    <th>Manager</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                            <tfoot>
                                <tr>
                                    <th>No.</th>
                                    <th>NIK</th>
                                    <th>Name</th>
                                    <th>Email</th>
                                    <th>Phone</th>
                                    <th>Address</th>
                                    <th>Birth</th>
                                    <th>Join Date</th>
                                    <th>Position</th>
                                    <th>Manager</th>
                                    <th>Actions</th>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
            </div>
        </div>
    </div>
    <!-- ============================================================== -->
    <!-- End PAge Content -->
    <!-- ============================================================== -->
</div>
<!-- ============================================================== -->
<!-- End Container fluid  -->
<!-- ============================================================== -->
<!-- sample modal content -->
<div class="modal fade bs-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true" style="display: none;">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="myLargeModalLabel"><i class="icon-user-follow"></i> @ViewData["Title"] Management</h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true" onclick="reset()">×</button>
            </div>
            <div class="modal-body">
                <form id="form" name="form">
                    <div class="form">
                        <div class="form-body">
                            <div class="row p-t-20">
                                <div class="col-md-6">
                                    <div class="form-group" id="nikGroup">
                                        <label for="nik" class="control-label">NIK <span class="text-danger">*</span></label>
                                        <div class="controls">
                                            <div class="input-group">
                                                <input type="text" class="form-control" name="NIK" id="NIK" placeholder="NIK" required data-validation-required-message="This field is required">
                                                <div class="input-group-addon"><i class="ti-id-badge"></i></div>
                                            </div>
                                        </div>
                                        <div class="form-control-feedback" id="ValidationNIK" style="display: none">Sorry, that NIK's taken. Try another?</div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label for="employeeName" class="control-label">Name <span class="text-danger">*</span></label>
                                        <div class="controls">
                                            <div class="input-group">
                                                <input type="text" class="form-control" name="EmployeeName" id="EmployeeName" placeholder="Name" required data-validation-required-message="This field is required">
                                                <div class="input-group-addon"><i class="ti-user"></i></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group" id="emailGroup">
                                        <label for="email" class="control-label">Email <span class="text-danger">*</span></label>
                                        <div class="controls">
                                            <div class="input-group">
                                                <input type="email" class="form-control" name="Email" id="Email" placeholder="Enter Email Address" required data-validation-required-message="This field is required">
                                                <div class="input-group-addon"><i class="ti-email"></i></div>
                                            </div>
                                        </div>
                                        <div class="form-control-feedback" id="ValidationEmail" style="display: none">Email already exist.</div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group" id="phoneGroup">
                                        <label for="phone" class="control-label">Phone <span class="text-danger">*</span></label>
                                        <div class="controls">
                                            <div class="input-group">
                                                <input type="number" class="form-control" name="Phone" id="Phone" placeholder="Enter Phone Number" required data-validation-containsnumber-regex="(\d)+" data-validation-containsnumber-message="No Characters Allowed, Only Numbers">
                                                <div class="input-group-addon"><i class="ti-mobile"></i></div>
                                            </div>
                                        </div>
                                        <div class="form-control-feedback" id="ValidationPhone" style="display: none">Phone number already exist.</div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label for="birthPlace" class="control-label">Birth Place <span class="text-danger">*</span></label>
                                        <div class="controls">
                                            <div class="input-group">
                                                <input type="text" class="form-control" name="BirthPlace" id="BirthPlace" placeholder="Birth Place" required data-validation-required-message="This field is required">
                                                <div class="input-group-addon"><i class="ti-location-pin"></i></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group" id="dateGroup">
                                        <label for="birthPlace" class="control-label">Birth Date <span class="text-danger">*</span></label>
                                        <div class="controls">
                                            <div class="input-group">
                                                <input type="date" class="form-control" name="BirthDate" id="BirthDate" required >
                                            </div>
                                        </div>
                                        <div class="form-control-feedback" id="ValidationDate" style="display: none">You have to older than 18</div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <label for="address" class="control-label">Address <span class="text-danger">*</span></label>
                                        <div class="controls">
                                            <div class="input-group">
                                                <textarea type="text" class="form-control" name="Address" id="Address" required placeholder="Enter Address"></textarea>
                                                <div class="input-group-addon"><i class="ti-map-alt"></i></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <hr class="m-t-0 m-b-40">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label for="birthPlace" class="control-label">Join Date <span class="text-danger">*</span></label>
                                        <div class="controls">
                                            <div class="input-group">
                                                <input type="date" class="form-control" name="JoinDate" id="JoinDate" required>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group" id="formCheckbox">
                                        <label>User Role <span class="text-danger">*</span></label>
                                        <div class="input-group" id="ulCheckbox">
                                            <ul class="icheck-list" id="roleCheckbox">
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label for="departmentDropdown" class="control-label">Department <span class="text-danger">*</span></label>
                                        <div class="controls">
                                            <select class="form-control custom-select" id="DepartmentDropdown" name="DepartmentDropdown"></select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="positionID" class="control-label">Position <span class="text-danger">*</span></label>
                                        <div class="controls">
                                            <select class="form-control custom-select" id="PositionID" name="PositionID">
                                                <option value="-1">Please select a position</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="managerNIK" class="control-label">Manager <span class="text-blue">(optional)</span></label>
                                        <select class="form-control custom-select" id="ManagerNIK" name="ManagerNIK">
                                            <option value="-1">Please select a manager</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-secondary btn-rounded waves-effect waves-light" data-dismiss="modal" aria-hidden="true" onclick="reset()">Close</button>
                        <button class="btn btn-success btn-rounded waves-effect waves-light" type="submit" id="Submit">Submit</button>
                    </div>
                </form>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<!-- /.modal -->

@section scripts
{
    <script>
        function selectCheckbox(value) {
            $("[name=" + 'roles' + "]").each(function () {
                if ($(this).val() == value) {
                    $(this).attr('checked', true);
                }
            });
        }
        var isUpdate = 0;
        $(document).ready(function () {
            $.ajax({
                type: "GET",
                url: '/Role/Get',
                headers: { "Authorization": sessionStorage.token },
                success: function (result) {
                    var data = result['result']
                    for (var i = 0; i < data.length; i++) {
                        if (i >= 8) {
                            var roleCheckbox = '<div class="input-group" id="ulCheckbox"><ul class="icheck-list" id="roleCheckbox"><li><input type="checkbox" class="check" data-checkbox="icheckbox_line-red" value="' + data[i].roleID + '"> ' + data[i].roleName + ' </li></ul ></div>';
                            $("#formCheckbox").append(roleCheckbox);
                        }
                        else if (i <= 3) {
                            var roleCheckbox = '<li><input type="checkbox" class="check" data-checkbox="icheckbox_line-red" value="' + data[i].roleID + '"> ' + data[i].roleName + ' </li>';
                            $("#roleCheckbox").append(roleCheckbox);
                        }
                        else {
                            var roleCheckbox = '<ul class="icheck-list" id="roleCheckbox"><li><input type="checkbox" class="check" data-checkbox="icheckbox_line-red" value="' + data[i].roleID + '"> ' + data[i].roleName + ' </li></ul >';
                            $("#ulCheckbox").append(roleCheckbox);
                        }
                    }
                }
            });
            var departmentDropdown = '<option value="-1">Please select a department</option>';
            $.ajax({
                type: "GET",
                url: '/department/get',
                success: function (result) {
                    var data = result['result']
                    for (var i = 0; i < data.length; i++) {
                        departmentDropdown += '<option value="' + data[i].departmentID + '">' + data[i].departmentName + '</option>';
                        $("#DepartmentDropdown").html(departmentDropdown);
                    }
                }
            });
            $("select#DepartmentDropdown").on('change', function () {
                var selectedDepartment = $('#DepartmentDropdown option:selected').val();
                $.ajax({
                    type: "GET",
                    url: '/position/get',
                    success: function (result) {
                        var positionDropdown = '<option value="-1">Please select a position</option>';
                        var data = result['result']
                        for (var i = 0; i < data.length; i++) {
                            if (data[i].departmentID == selectedDepartment) {
                                positionDropdown += '<option value="' + data[i].positionID + '">' + data[i].positionName + '</option>';
                                $("#PositionID").html(positionDropdown);
                            }
                        }
                    }
                });
                $("select#PositionID").on('change', function () {
                    var selectedPosition = $('#PositionID option:selected').text();
                    var selectedDepartment = $('#DepartmentDropdown option:selected').val();
                    $.ajax({
                        type: "GET",
                        url: '/Employee/Get',
                        headers: { 'Authorization': 'Bearer ' + localStorage.token },
                        success: function (result) {
                            var data = result['result']
                            if (selectedPosition != "RM") {
                                $('#ManagerNIK').removeAttr("disabled");
                                managerDropdown = '<option value="-1">Please select a manager</option>';
                                for (var i = 0; i < data.length; i++) {
                                    if (data[i].position.departmentID == selectedDepartment) {
                                        managerDropdown += '<option value="' + data[i].nik + '">' + data[i].employeeName + '</option>';
                                        $("#ManagerNIK").html(managerDropdown);
                                    }
                                }
                            } else {
                                managerDropdown = '< option value = "-1" > Please select a manager</option >';
                                $("#ManagerNIK").html(managerDropdown);
                                $('#ManagerNIK').prop("disabled", true);
                            }
                        }
                    });
                })
            });
            $('#table_id').DataTable({
                dom: 'Bfrtip',
                buttons: [
                    {
                        extend: 'csv',
                        exportOptions: {
                            columns: [0, 2, 3, 4, 5, 6, 7, 8, 9]
                        }
                    },
                    {
                        extend: 'excel',
                        exportOptions: {
                            columns: [0, 2, 3, 4, 5, 6, 7, 8, 9]
                        }
                    },
                    {
                        extend: 'pdf',
                        exportOptions: {
                            columns: [0, 2, 3, 4, 5, 6, 7, 8, 9]
                        }
                    }
                ],
                "responsive": true,
                "filter": true,
                "orderMulti": false,
                "ajax": {
                    "url": "/Employee/Get",
                    "type": "GET",
                    "dataSrc": "result",
                    "headers": "{ 'Authorization': 'Bearer '" + sessionStorage.token + "}",
                },
                "columnDefs": [
                    {
                        "targets": [1, 3, 4, 5, 6],
                        "visible": false,
                    },
                    {
                        "targets": [0, 4, 10],
                        "orderable": false,
                    }
                ],
                "columns": [
                    {
                        "data": null,
                        "name": "no",
                        "autowidth": true,
                        "render": function (data, type, row, meta) {
                            return meta.row + meta.settings._iDisplayStart + 1;
                        }
                    },
                    { "data": 'nik' },
                    { "data": 'employeeName' },
                    { "data": 'email' },
                    { "data": 'phone' },
                    { "data": 'address' },
                    {
                        "data": 'birth',
                        "render": function (data, type, row, meta) {
                            return row['birthPlace'] + ', ' + moment(row['birthDate']).format('DD/MM/YYYY')
                        }
                    },
                    {
                        "data": 'joinDate',
                        "render": function (data, type, row) {
                            return moment(data).format('DD-MM-YYYY');
                        }
                    },
                    { "data": 'position.positionName' },
                    {
                        "data": 'manager',
                        "render": function (data) {
                            if (data != null)
                                return data.employeeName
                            return ''
                        }
                    },
                    {
                        "data": 'nik',
                        "render": function (data, type, row, meta) {
                            return '<button class="btn btn-sm btn-success waves-effect waves-light" data-toggle="tooltip" data-placement="top" title="Edit"  onclick="Get(\'' + row['nik'] + '\')"><i class ="mdi mdi-table-edit"></i> Edit</button> ' +
                                '<button class="btn btn-sm btn-danger waves-effect waves-light" data-toggle="tooltip" data-placement="top" title="Delete" onclick="Delete(\'' + row['nik'] + '\')"><i class ="mdi mdi-delete"></i> Delete</button>'
                        }
                    }
                ]
            });
        });

        $('#form').submit(function (event) {
            event.preventDefault();
            var form = $(this);
            var nikValue = $('#NIK').val()
            var myCheckboxes = new Array();
            $("input:checked").each(function () {
                myCheckboxes.push(parseInt($(this).val()));
            });
            var urlString;
            if (isUpdate == 1)
                urlString = "/Employee/Put"
            else
                urlString = "/Employee/Post"
            $.ajax({
                type: "POST",
                url: urlString,
                data: form.serialize(),
                success: function (data) {
                    if (isUpdate == 1) {
                        $.ajax({
                            type: "POST",
                            url: "/AccountRole/Delete",
                            data: { 'key': nikValue }
                        });
                    }
                    for (var i = 0; i < myCheckboxes.length; i++) {
                        var role = new Object();
                        role.nik = nikValue;
                        role.roleID = myCheckboxes[i];
                        $.ajax({
                            type: "POST",
                            url: "/AccountRole/Post",
                            data: JSON.stringify(role),
                            contentType: "application/json; charset=utf-8",
                            dataType: "json"
                        });
                    }
                    Swal.fire({
                        icon: 'success',
                        title: 'Your data has been saved',
                        showConfirmButton: false,
                        timer: 1500
                    })
                    $('.bs-modal-lg').modal('hide');
                    $('#table_id').DataTable().ajax.reload();
                },
                error: function (error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Something went wrong!',
                        footer: '<a href>Your Work cannot be saved</a>'
                    })
                }
            })
        })

        function Get(id) {
            $('#NIK').attr('readonly', true);
            $('#Email').attr('readonly', true);
            $.ajax({
                url: "/AccountRole/GetById",
                type: "GET",
                data: { 'key': id },
                success: function (result) {
                    var data = result["result"];
                    $('input:checkbox').removeAttr('checked');
                    for (var i = 0; i < data.length; i++) {
                        selectCheckbox(data[i].roleID)
                    }
                }
            });
            $.ajax({
                url: "/Employee/GetById",
                type: "GET",
                data: { 'key': id },
                success: function (result) {
                    $('.bs-modal-lg').modal('show');
                    var data = result["result"];
                    $('#NIK').val(data.nik);
                    $('#EmployeeName').val(data.employeeName);
                    $('#Email').val(data.email);
                    $('#Phone').val(data.phone);
                    $('#Address').val(data.address);
                    $('#BirthPlace').val(data.birthPlace);
                    $('#BirthDate').val(moment(data.birthDate).format('YYYY-MM-DD'));
                    $('#JoinDate').val(moment(data.joinDate).format('YYYY-MM-DD'));
                    $('#DepartmentDropdown').val(data.position.departmentID).change();
                    $('#PositionID').val(data.positionID).change();
                    if (data.manager != null)
                        $('#ManagerNIK').val(data.manager.nik).change();
                    isUpdate = 1;
                }
            });
        }

        function Delete(id) {
            swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: "POST",
                        url: "/Account/Delete",
                        data: { 'key': id },
                        success: function (data) {
                            $('#table_id').DataTable().ajax.reload();
                            Swal.fire(
                                'Deleted!',
                                'Your data has been deleted.',
                                'success'
                            )
                        },
                        error: function (error) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: 'Something went wrong!',
                                footer: '<a href>Your Work cannot be saved</a>'
                            })
                        },
                    });
                }
            });
        }

        function reset() {
            isUpdate = 0;
            $('#form').trigger('reset');
            $('input:checkbox').removeAttr('checked');
            $('#NIK').removeAttr('readonly');
            $('#Email').removeAttr('readonly');
            $('#ValidationNIK').hide();
            $('#ValidationEmail').hide();
            $('#ValidationPhone').hide();
            $('#ValidationDate').hide();
            $('#nikGroup').removeClass('has-danger').removeClass('has-success').removeClass('has-warning');
            $('#emailGroup').removeClass('has-danger').removeClass('has-success').removeClass('has-warning');
            $('#phoneGroup').removeClass('has-danger').removeClass('has-success').removeClass('has-warning');
            $('#dateGroup').removeClass('has-danger').removeClass('has-success');
            $('#Submit').removeAttr('disabled');
        }

        $('#NIK').keyup(function () {
            var nik = $('#NIK').val();
            $.ajax({
                url: "/Employee/GetById",
                type: "GET",
                data: { 'key': nik },
                headers: { 'Authorization': 'Bearer ' + localStorage.token },
                success: function (result) {
                    $('#nikGroup').addClass('has-danger');
                    $('#ValidationNIK').show();   
                },
                error: function () {
                    if (nik == "") {
                        $('#nikGroup').removeClass('has-danger').removeClass('has-success').addClass('has-warning');
                        $('#ValidationNIK').hide();
                    } else {
                        $('#nikGroup').removeClass('has-danger').removeClass('has-warning').addClass('has-success');
                        $('#ValidationNIK').hide();
                    }
                }
            })
        });

        $('#Email').keyup(function () {
            var email = $('#Email').val();
            if (email == "") {
                $('#emailGroup').removeClass('has-danger').removeClass('has-success').addClass('has-warning');
                $('#ValidationEmail').hide();
            }
            else {
                $.ajax({
                    url: "/Employee/Validation",
                    type: "Post",
                    data: { 'params': email },
                    success: function (result) {
                        var data = result["message"];
                        if (data != "") {
                            $('#emailGroup').removeClass('has-warning').removeClass('has-success').addClass('has-danger');
                            $('#ValidationEmail').show();
                        }
                        else {
                            $('#emailGroup').removeClass('has-danger').removeClass('has-warning').addClass('has-success');
                            $('#ValidationEmail').hide();
                        }
                    }
                })
            }
        });

        $('#Phone').keyup(function () {
            var phone = $('#Phone').val();
            if (phone == "") {
                $('#phoneGroup').removeClass('has-danger').removeClass('has-success').addClass('has-warning');
                $('#ValidationPhone').hide();
            }
            else {
                $.ajax({
                    url: "/Employee/Validation",
                    type: "Post",
                    data: { 'params': phone },
                    success: function (result) {
                        var data = result["message"];
                        if (data != "") {
                            $('#phoneGroup').removeClass('has-warning').removeClass('has-success').addClass('has-danger');
                            $('#ValidationPhone').show();
                        } else {
                            $('#phoneGroup').removeClass('has-danger').removeClass('has-warning').addClass('has-success');
                            $('#ValidationPhone').hide();
                        }
                    }
                })
            }
        });

        $('#BirthDate').on('change',function() {
            var date = new Date();
            var birthDate = $('#BirthDate').val();
            console.log(birthDate);
            var birthYear = moment(birthDate).format('YYYY');
            var yearNow = moment(date).format('YYYY');

            if ((yearNow - birthYear) < 18) {
                $('#dateGroup').addClass('has-danger');
                $('#ValidationDate').show();
                $('#Submit').attr('disabled', true);
            } else {
                $('#dateGroup').removeClass('has-danger').addClass('has-success');
                $('#ValidationDate').hide();
                $('#Submit').removeAttr('disabled');
            }
        })

    </script>
}