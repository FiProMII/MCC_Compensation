#pragma checksum "C:\Users\Acer\source\repos\MCC_Compensation\MVC\Views\Account\AccountSetting.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "3f1d835b2d4e0f6742adc6411644173ce4a623db"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Account_AccountSetting), @"mvc.1.0.view", @"/Views/Account/AccountSetting.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3f1d835b2d4e0f6742adc6411644173ce4a623db", @"/Views/Account/AccountSetting.cshtml")]
    public class Views_Account_AccountSetting : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\Acer\source\repos\MCC_Compensation\MVC\Views\Account\AccountSetting.cshtml"
   Layout = "_LayoutAdmin";
    ViewData["Title"] = "Account Setting";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<!-- ============================================================== -->
<!-- Container fluid  -->
<!-- ============================================================== -->
<div class=""container-fluid"">
    <!-- ============================================================== -->
    <!-- Bread crumb and right sidebar toggle -->
    <!-- ============================================================== -->
    <div class=""row page-titles"">
        <div class=""col-md-6 col-8 align-self-center"">
            <h3 class=""text-themecolor m-b-0 m-t-0"">");
#nullable restore
#line 14 "C:\Users\Acer\source\repos\MCC_Compensation\MVC\Views\Account\AccountSetting.cshtml"
                                               Write(ViewData["Title"]);

#line default
#line hidden
#nullable disable
            WriteLiteral("</h3>\r\n            <ol class=\"breadcrumb\">\r\n                <li class=\"breadcrumb-item\"><a href=\"/Dashboard/Index\">Home</a></li>\r\n                <li class=\"breadcrumb-item active\">");
#nullable restore
#line 17 "C:\Users\Acer\source\repos\MCC_Compensation\MVC\Views\Account\AccountSetting.cshtml"
                                              Write(ViewData["Title"]);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</li>
            </ol>
        </div>
    </div>
    <!-- ============================================================== -->
    <!-- End Bread crumb and right sidebar toggle -->
    <!-- ============================================================== -->
    <!-- ============================================================== -->
    <!-- Start Page Content -->
    <!-- ============================================================== -->
    <div class=""row"">
        <div class=""col-md-3""></div>
        <div class=""col-md-6"">
            <div class=""card"">
                <div class=""card-body"">
                    <h4 class=""card-title"">Change password</h4>
                    <form class=""form-horizontal form-material"" id=""accountSetting"">
                        <div class=""form-group m-t-40"" id=""passGroup"">
                            <div class=""col-xs-12"">
                                <input class=""form-control"" type=""password"" name=""Password"" id=""oldPassword""");
            BeginWriteAttribute("required", " required=\"", 1847, "\"", 1858, 0);
            EndWriteAttribute();
            WriteLiteral(@" placeholder=""Current Password"">
                            </div>
                            <div class=""form-control-feedback"" id=""validationPass"" style=""display: none"">sorry this password does not match, please check again</div>
                        </div>
                        <div class=""form-group"" id=""newPassGroup"">
                            <div class=""col-xs-12"">
                                <input class=""form-control"" type=""password"" name=""Password"" id=""newPassword""");
            BeginWriteAttribute("required", " required=\"", 2357, "\"", 2368, 0);
            EndWriteAttribute();
            WriteLiteral(@" placeholder=""New Password"">
                            </div>
                            <div class=""form-control-feedback"" id=""validNewPass"" style=""display: none"">The new password cannot be the same as the old password</div>
                        </div>
                        <div class=""form-group"" id=""confirmPassGroup"">
                            <div class=""col-xs-12"">
                                <input class=""form-control"" type=""password"" id=""confirmPassword""");
            BeginWriteAttribute("required", " required=\"", 2854, "\"", 2865, 0);
            EndWriteAttribute();
            WriteLiteral(@" placeholder=""Confirm New Password"">
                            </div>
                            <div class=""form-control-feedback"" id=""passwordmatch"" style=""display: none""><code>Password</code> doesn't match</div>
                        </div>
                        <div class=""form-group text-center m-t-20"">
                            <div class=""col-xs-12"">
                                <button class=""btn btn-info btn-lg btn-block text-uppercase waves-effect waves-light"" type=""submit"" id=""changePass"">Change Password</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <div class=""col-md-3""></div>
    </div>
</div>

");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script>
        $('#confirmPassword').keyup(function () {
            var pass = $('#newPassword').val();
            var cpass = this.value;
            if (cpass == pass) {
                $('#confirmPassGroup').addClass('has-danger');
                $('#passwordmatch').show();
                $('#submit').attr('disable', true);
            } else {
                $('#confirmPassGroup').removeClass('has-danger');
                $('#passwordmatch').hide();
                $('#submit').attr('disable', false);
            }
        })

        $('#newPassword').keyup(function () {
            var oldPass = $('#oldPassword').val();
            var newPass = this.value;
            if (newPass == oldPass) {
                $('#newPassGroup').addClass('has-danger');
                $('#validNewPass').show();
                $('#submit').attr('disable', true);
            } else {
                $('#newPassGroup').removeClass('has-danger');
                $('#validNewPass').hide");
                WriteLiteral(@"();
                $('#submit').attr('disable', false);
            }
        })

        $('#accountSetting').submit(function (event) {
            event.preventDefault();
            var newPass = $('#newPassword').val();
            var pass = $('#oldPassword').val();
            if (newPass != pass) {
                $('#newPassGroup').removeClass('has-danger');
                $('#validationPass').hide();
                $.ajax({
                    type: ""POST"",
                    url: ""/Account/Check"",
                    data: { 'pass': pass },
                    headers: { 'Authorization': 'Bearer ' + localStorage.token },
                    success: function (result) {
                        var data = result['message'];
                        if (data == ""Correct"") {
                            $('#passGroup').removeClass('has-danger');
                            $('#validationPass').hide();
                            var account = new Object();
                      ");
                WriteLiteral(@"      account.password = newPass;
                            $.ajax({
                                type: ""POST"",
                                url: ""/Account/Put"",
                                data: JSON.parse(JSON.stringify(account)),
                                headers: { 'Authorization': 'Bearer ' + localStorage.token },
                                success: function (data) {
                                    Swal.fire({
                                        title: 'You have successfully changed your password. <br />Please Sign in again',
                                        icon: 'success',
                                        confirmButtonColor: '#3085d6',
                                        confirmButtonText: 'OK'
                                    }).then((result) => {
                                        if (result.isConfirmed) {
                                            window.location.href = """);
#nullable restore
#line 128 "C:\Users\Acer\source\repos\MCC_Compensation\MVC\Views\Account\AccountSetting.cshtml"
                                                               Write(Url.Action("Index", "Account"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""";
                                        }
                                    })
                                }
                            })
                        } else {
                            $('#passGroup').addClass('has-danger');
                            $('#validationPass').show();
                        }
                    }
                })
            } else {
                $('#newPassGroup').addClass('has-danger');
                $('#validationPass').show();
            }
        });

    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
